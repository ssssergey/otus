diff --git a/Include/opcode.h b/Include/opcode.h
index 9ed5487..cd74ae4 100644
--- a/Include/opcode.h
+++ b/Include/opcode.h
@@ -158,6 +158,7 @@ extern "C" {
 
 #define SET_ADD         146
 #define MAP_ADD         147
+#define LOAD_LEE         148
 
 
 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
diff --git a/Lib/opcode.py b/Lib/opcode.py
index e403365..141cc93 100644
--- a/Lib/opcode.py
+++ b/Lib/opcode.py
@@ -188,5 +188,7 @@ def_op('EXTENDED_ARG', 145)
 EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)
+def_op('LOAD_LEE', 148)
+
 
 del def_op, name_op, jrel_op, jabs_op
diff --git a/Python/ceval.c b/Python/ceval.c
index 4e4adc2..f298663 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -1210,6 +1210,23 @@ PyEval_EvalFrameEx(PyFrameObject *f, int throwflag)
             FAST_DISPATCH();
         }
 
+        TARGET (LOAD_LEE)
+        {
+            x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+                x = GETITEM(consts, oparg);
+                Py_INCREF(x);
+                PUSH(x);
+                goto fast_next_opcode;
+            }
+            format_exc_check_arg(PyExc_UnboundLocalError,
+                UNBOUNDLOCAL_ERROR_MSG,
+                PyTuple_GetItem(co->co_varnames, oparg));
+            break;
+        }
+
         TARGET(LOAD_FAST)
         {
             x = GETLOCAL(oparg);
diff --git a/Python/opcode_targets.h b/Python/opcode_targets.h
index 95eb127..80ef2ff 100644
--- a/Python/opcode_targets.h
+++ b/Python/opcode_targets.h
@@ -147,6 +147,7 @@ static void *opcode_targets[256] = {
     &&TARGET_EXTENDED_ARG,
     &&TARGET_SET_ADD,
     &&TARGET_MAP_ADD,
+    &&TARGET_LOAD_LEE,
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
